{"version":3,"sources":["../../src/adapters/CoinStatsAdapter.js"],"names":["crId","ut","toFirstUpperCase","C","SOURCE","_isArr","Array","isArray","_crRelated","coins","map","coinKeyWords","filter","Boolean","join","_toArticles","json","news","title","description","feedDate","source","link","articleId","related","author","publishedAt","url","CoinStatsAdapter","toNews","option","articles","sortBy"],"mappings":";;;;;;;AAAA;;IAGEA,I,GAEEC,c,CAFFD,I;IACAE,gB,GACED,c,CADFC,gB;AAGF,IAAMC,CAAC,GAAG;AACRC,EAAAA,MAAM,EAAE;AADA,CAAV;;AAIA,IAAMC,MAAM,GAAGC,KAAK,CAACC,OAArB;AAAA,IACEC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAI,CAACA,KAAK,IAAI,EAAV,EACnBC,GADmB,CACf;AAAA,QAAGC,YAAH,QAAGA,YAAH;AAAA,WAAsBA,YAAtB;AAAA,GADe,EAEnBC,MAFmB,CAEZC,OAFY,EAGnBC,IAHmB,CAGd,GAHc,CAAJ;AAAA,CADpB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAAA,cACTA,IAAI,IAAI,EADC;AAAA,MAClBC,IADkB,SAClBA,IADkB;;AAE1B,SAAO,CAACZ,MAAM,CAACY,IAAD,CAAP,GAAgB,EAAhB,GAAqBA,IAAI,CAACP,GAAL,CAAS;AAAA,QACnCQ,KADmC,SACnCA,KADmC;AAAA,QAC5BC,WAD4B,SAC5BA,WAD4B;AAAA,QAEnCV,KAFmC,SAEnCA,KAFmC;AAAA,QAGnCW,QAHmC,SAGnCA,QAHmC;AAAA,QAGzBC,MAHyB,SAGzBA,MAHyB;AAAA,QAInCC,IAJmC,SAInCA,IAJmC;AAAA,WAK9B;AACJD,MAAAA,MAAM,EAAElB,CAAC,CAACC,MADN;AAEJmB,MAAAA,SAAS,EAAEvB,IAAI,EAFX;AAGJkB,MAAAA,KAAK,EAALA,KAHI;AAGGC,MAAAA,WAAW,EAAXA,WAHH;AAIJK,MAAAA,OAAO,EAAEhB,UAAU,CAACC,KAAD,CAJf;AAKJgB,MAAAA,MAAM,EAAEJ,MALJ;AAMJK,MAAAA,WAAW,EAAEN,QANT;AAOJO,MAAAA,GAAG,EAAEL;AAPD,KAL8B;AAAA,GAAT,CAA5B;AAcD,CAhBD;;AAkBA,IAAMM,gBAAgB,GAAG;AACvBC,EAAAA,MADuB,kBAChBb,IADgB,EACVc,MADU,EACH;AACZ,QAAAC,QAAQ,GAAGhB,WAAW,CAACC,IAAD,CAAtB;AAAA,QACFJ,MADE,GACSkB,MADT,CACFlB,MADE;;AAEN,WAAO;AACLS,MAAAA,MAAM,EAAElB,CAAC,CAACC,MADL;AAEL2B,MAAAA,QAAQ,EAAEA,QAFL;AAGLC,MAAAA,MAAM,EAAE9B,gBAAgB,CAACU,MAAD;AAHnB,KAAP;AAKD;AATsB,CAAzB;eAYegB,gB","sourcesContent":["import ut from '../utils/ut'\r\n\r\nconst {\r\n  crId,\r\n  toFirstUpperCase\r\n} = ut;\r\n\r\nconst C = {\r\n  SOURCE: 'coinstats_news'\r\n};\r\n\r\nconst _isArr = Array.isArray\r\n, _crRelated = coins => (coins || [])\r\n    .map(({ coinKeyWords }) => coinKeyWords)\r\n    .filter(Boolean)\r\n    .join('|');\r\n\r\nconst _toArticles = json => {\r\n  const { news } = json || {};\r\n  return !_isArr(news) ? [] : news.map(({\r\n    title, description,\r\n    coins,\r\n    feedDate, source,\r\n    link\r\n  }) => ({\r\n     source: C.SOURCE,\r\n     articleId: crId(),\r\n     title, description,\r\n     related: _crRelated(coins),\r\n     author: source,\r\n     publishedAt: feedDate,\r\n     url: link\r\n  }));\r\n};\r\n\r\nconst CoinStatsAdapter = {\r\n  toNews(json, option){\r\n    const articles = _toArticles(json)\r\n    , { filter } = option;    \r\n    return {\r\n      source: C.SOURCE,\r\n      articles: articles,\r\n      sortBy: toFirstUpperCase(filter)\r\n    };\r\n  }\r\n};\r\n\r\nexport default CoinStatsAdapter\r\n"],"file":"CoinStatsAdapter.js"}