{"version":3,"sources":["../../src/adapters/MessariAdapter.js"],"names":["crId","ut","C","SOURCE","_crRelated","tags","filter","Boolean","map","item","join","_toArticles","json","Array","isArray","data","title","published_at","url","author","name","source","articleId","related","publishedAt","MessariAdapter","toNews","option","articles"],"mappings":";;;;;;;AAAA;;IAEQA,I,GAASC,c,CAATD,I;AAER,IAAME,CAAC,GAAG;AACRC,EAAAA,MAAM,EAAE;AADA,CAAV;AAIA;AACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,SAAI,CAACA,IAAI,IAAI,EAAT,EACzBC,MADyB,CAClBC,OADkB,EAEzBC,GAFyB,CAErB,UAAAC,IAAI;AAAA,iBAAQA,IAAR;AAAA,GAFiB,EAGzBC,IAHyB,CAGpB,GAHoB,CAAJ;AAAA,CAAvB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC5B,MAAI,CAACA,IAAD,IAAS,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAI,CAACG,IAAnB,CAAd,EAAwC;AACtC,WAAO,EAAP;AACD;;AACD,SAAOH,IAAI,CAACG,IAAL,CAAUP,GAAV,CAAc,UAAAC,IAAI,EAAI;AAAA,QAEzBO,KAFyB,GAOvBP,IAPuB,CAEzBO,KAFyB;AAAA,QAIzBX,IAJyB,GAOvBI,IAPuB,CAIzBJ,IAJyB;AAAA,QAKzBY,YALyB,GAOvBR,IAPuB,CAKzBQ,YALyB;AAAA,QAKXC,GALW,GAOvBT,IAPuB,CAKXS,GALW;AAAA,QAMzBC,MANyB,GAOvBV,IAPuB,CAMzBU,MANyB;AAAA,QAQvBC,IARuB,GAQdD,MARc,CAQvBC,IARuB;AAS3B,WAAO;AACLC,MAAAA,MAAM,EAAEnB,CAAC,CAACC,MADL;AAELmB,MAAAA,SAAS,EAAEtB,IAAI,EAFV;AAGLgB,MAAAA,KAAK,EAAEA,KAHF;AAIL;AACAO,MAAAA,OAAO,EAAEnB,UAAU,CAACC,IAAD,CALd;AAMLc,MAAAA,MAAM,EAAEC,IANH;AAOLI,MAAAA,WAAW,EAAEP,YAPR;AAQLC,MAAAA,GAAG,EAAEA;AARA,KAAP;AAUD,GAnBM,CAAP;AAoBD,CAxBD;;AA0BA,IAAMO,cAAc,GAAG;AACrBC,EAAAA,MADqB,kBACdd,IADc,EACRe,MADQ,EACD;AAClB,QAAMC,QAAQ,GAAGjB,WAAW,CAACC,IAAD,CAA5B;;AACA,WAAO;AACLS,MAAAA,MAAM,EAAEnB,CAAC,CAACC,MADL;AAELyB,MAAAA,QAAQ,EAAEA;AAFL,KAAP;AAID;AAPoB,CAAvB;eAUeH,c","sourcesContent":["import ut from '../utils/ut'\r\n\r\nconst { crId } = ut;\r\n\r\nconst C = {\r\n  SOURCE: 'messari_news'\r\n};\r\n\r\n/* Match only links that are fully qualified with https */\r\n//const fullLinkOnlyRegex = /^\\[([\\w\\s\\d]+)\\]\\((https?:\\/\\/[\\w\\d./?=#]+)\\)$/\r\n\r\nconst _crRelated = tags => (tags || [])\r\n .filter(Boolean)\r\n .map(item => `#${item}`)\r\n .join(' ');\r\n\r\nconst _toArticles = (json) => {\r\n  if (!json || !Array.isArray(json.data)) {\r\n    return [];\r\n  }\r\n  return json.data.map(item => {\r\n    const {\r\n      title,\r\n      //content,\r\n      tags,\r\n      published_at, url,\r\n      author\r\n    } = item\r\n    , { name } = author;\r\n    return {\r\n      source: C.SOURCE,\r\n      articleId: crId(),\r\n      title: title,\r\n      //description: '',\r\n      related: _crRelated(tags),\r\n      author: name,\r\n      publishedAt: published_at,\r\n      url: url\r\n    };\r\n  })\r\n}\r\n\r\nconst MessariAdapter = {\r\n  toNews(json, option){\r\n    const articles = _toArticles(json);\r\n    return {\r\n      source: C.SOURCE,\r\n      articles: articles\r\n    };\r\n  }\r\n}\r\n\r\nexport default MessariAdapter\r\n"],"file":"MessariAdapter.js"}