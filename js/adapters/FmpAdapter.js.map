{"version":3,"sources":["../../src/adapters/FmpAdapter.js"],"names":["C","SOURCE","_toDate","strDate","_arrDateTime","split","_arrDate","_strDate","reverse","join","_toArticles","json","Array","isArray","articles","map","item","title","text","symbol","site","publishedDate","url","source","articleId","description","related","author","FmpAdapter","toNews","option"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,MAAM,EAAE;AADA,CAAV;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,OAAO,EAAI;AACzB,MAAMC,YAAY,GAAG,CAACD,OAAO,IAAI,EAAZ,EAAgBE,KAAhB,CAAsB,GAAtB,CAArB;AAAA,MACEC,QAAQ,GAAG,CAACF,YAAY,CAAC,CAAD,CAAZ,IAAmB,EAApB,EAAwBC,KAAxB,CAA8B,GAA9B,CADb;AAAA,MAEEE,QAAQ,GAAGD,QAAQ,CAACE,OAAT,GAAmBC,IAAnB,CAAwB,GAAxB,CAFb;;AAGA,SAAO,CAACL,YAAY,CAAC,CAAD,CAAZ,IAAmB,EAApB,IAA0B,GAA1B,GAAgCG,QAAvC;AACD,CALD;;AAOA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAC1B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACxB,WAAO,EAAP;AACD;;AAED,MAAMG,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAAS,UAAAC,IAAI,EAAI;AAAA,QAE5BC,KAF4B,GAK1BD,IAL0B,CAE5BC,KAF4B;AAAA,QAErBC,IAFqB,GAK1BF,IAL0B,CAErBE,IAFqB;AAAA,QAEfC,MAFe,GAK1BH,IAL0B,CAEfG,MAFe;AAAA,QAG5BC,IAH4B,GAK1BJ,IAL0B,CAG5BI,IAH4B;AAAA,QAGtBC,aAHsB,GAK1BL,IAL0B,CAGtBK,aAHsB;AAAA,QAI5BC,GAJ4B,GAK1BN,IAL0B,CAI5BM,GAJ4B;AAO9B,WAAO;AACLC,MAAAA,MAAM,EAAEvB,CAAC,CAACC,MADL;AAELuB,MAAAA,SAAS,EAAE,uBAFN;AAGLP,MAAAA,KAAK,EAAEA,KAHF;AAILQ,MAAAA,WAAW,EAAEP,IAJR;AAKLQ,MAAAA,OAAO,EAAEP,MALJ;AAMLQ,MAAAA,MAAM,EAAEP,IANH;AAOLC,MAAAA,aAAa,EAAEnB,OAAO,CAACmB,aAAD,CAPjB;AAQLC,MAAAA,GAAG,EAAEA;AARA,KAAP;AAUH,GAjBgB,CAAjB;AAkBA,SAAOR,QAAP;AACD,CAxBD;;AA2BA,IAAMc,UAAU,GAAG;AACjBC,EAAAA,MADiB,kBACVlB,IADU,EACJmB,MADI,EACI;AACnB,QAAMhB,QAAQ,GAAGJ,WAAW,CAACC,IAAD,CAA5B;;AAEA,WAAO;AACLY,MAAAA,MAAM,EAAEvB,CAAC,CAACC,MADL;AAELa,MAAAA,QAAQ,EAAEA,QAFL,CAGL;;AAHK,KAAP;AAKD;AATgB,CAAnB;eAYec,U","sourcesContent":["import crId from '../utils/crId'\r\n\r\nconst C = {\r\n  SOURCE: 'fmp_news'\r\n};\r\n\r\n\r\nconst _toDate = strDate => {\r\n  const _arrDateTime = (strDate || '').split(' ')\r\n  , _arrDate = (_arrDateTime[0] || '').split('-')\r\n  , _strDate = _arrDate.reverse().join('-')\r\n  return (_arrDateTime[1] || '') + ' ' + _strDate;\r\n}\r\n\r\nconst _toArticles = json => {\r\n  if (!Array.isArray(json)) {\r\n    return [];\r\n  }\r\n\r\n  const articles = json.map(item => {\r\n      const {\r\n        title, text, symbol,\r\n        site, publishedDate,\r\n        url\r\n      } = item;\r\n\r\n      return {\r\n        source: C.SOURCE,\r\n        articleId: crId(),\r\n        title: title,\r\n        description: text,\r\n        related: symbol,\r\n        author: site,\r\n        publishedDate: _toDate(publishedDate),\r\n        url: url\r\n      };\r\n  });\r\n  return articles;\r\n}\r\n\r\n\r\nconst FmpAdapter = {\r\n  toNews(json, option) {\r\n    const articles = _toArticles(json);\r\n\r\n    return {\r\n      source: C.SOURCE,\r\n      articles: articles,\r\n      //sortBy: `${symbol.toUpperCase()} ${recent}`\r\n    };\r\n  }\r\n}\r\n\r\nexport default FmpAdapter\r\n"],"file":"FmpAdapter.js"}