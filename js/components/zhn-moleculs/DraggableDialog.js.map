{"version":3,"sources":["../../../src/components/zhn-moleculs/DraggableDialog.jsx"],"names":["CL_DIALOG","CL_DIALOG_OPEN","styles","rootDiv","position","top","left","backgroundColor","border","borderRadius","boxShadow","zIndex","childrenDiv","cursor","commandDiv","marginTop","marginBottom","marginRight","BLOCK","display","NONE","_isFn","fn","DraggableDialog","_handleKeyDown","event","focused","document","activeElement","props","onKeyDown","_handleClose","prevFocusedEl","focus","onClose","_renderCommandButton","commandButtons","S","styleButton","onShowChart","RAISED_ROOT","CL_RAISED_DIV","_refRootDiv","c","componentDidMount","Interact","makeDragable","componentDidUpdate","prevProps","prevState","isShow","render","rootStyle","caption","browserCaptionStyle","children","_styleShow","_classShow","focusPrevEl","Component"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport BrowserCaption from '../zhn-atoms/BrowserCaption'\r\nimport RaisedButton from '../zhn-atoms/RaisedButton'\r\n\r\nimport Interact from '../../utils/Interact'\r\n\r\nconst CL_DIALOG = 'dialog';\r\nconst CL_DIALOG_OPEN = 'dialog show-popup';\r\n\r\nconst styles = {\r\n  rootDiv: {\r\n    position: 'absolute',\r\n    top: '30px',\r\n    left: '50px',\r\n    backgroundColor: '#4D4D4D',\r\n    border: 'solid 2px #3f5178',\r\n    borderRadius: '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px',\r\n    zIndex: 10\r\n  },\r\n  childrenDiv: {\r\n    cursor: 'default'\r\n  },\r\n  commandDiv : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '16px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  },\r\n  BLOCK: {\r\n    display: 'block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nclass DraggableDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ]),\r\n    commandButtons: PropTypes.arrayOf(PropTypes.element),\r\n    onShowChart: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  componentDidMount(){\r\n     Interact.makeDragable(this.rootDiv)\r\n     this.prevFocusedEl = document.activeElement\r\n     this.rootDiv.focus()\r\n  }\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (this.props.isShow && !prevProps.isShow) {\r\n      this.rootDiv.focus()\r\n    }\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    const focused = document.activeElement;\r\n     if (focused == this.rootDiv){\r\n       this.props.onKeyDown(event)\r\n     }\r\n  }\r\n\r\n  _handleClose = (event) => {\r\n    if (this.prevFocusedEl) {\r\n      this.prevFocusedEl.focus()\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  _renderCommandButton = ({\r\n    commandButtons, styleButton:S, onShowChart, onClose\r\n  }) => {\r\n    return (\r\n      <div style={styles.commandDiv}>\r\n        {commandButtons}\r\n        {_isFn(onShowChart) &&\r\n          <RaisedButton\r\n             rootStyle={S.RAISED_ROOT}\r\n             clDiv={S.CL_RAISED_DIV}\r\n             caption=\"Show\"\r\n             onClick={onShowChart}\r\n          />\r\n        }\r\n        <RaisedButton\r\n           rootStyle={S.RAISED_ROOT}\r\n           clDiv={S.CL_RAISED_DIV}\r\n           caption=\"Close\"\r\n           onClick={this._handleClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _refRootDiv = c => this.rootDiv = c\r\n\r\n  render(){\r\n    const {\r\n           isShow, rootStyle,\r\n           caption, browserCaptionStyle,\r\n           commandButtons, styleButton,\r\n           children,\r\n           onShowChart, onClose\r\n         } = this.props\r\n        , _styleShow = isShow ? styles.BLOCK : styles.NONE\r\n        , _classShow = isShow ? CL_DIALOG_OPEN : CL_DIALOG;\r\n    return (\r\n      <div\r\n           ref={this._refRootDiv}\r\n           className={_classShow}\r\n           style={{\r\n             ...styles.rootDiv,\r\n             ...rootStyle,\r\n             ..._styleShow\r\n           }}\r\n           tabIndex=\"0\"\r\n           onKeyDown={this._handleKeyDown}\r\n      >\r\n        <BrowserCaption\r\n           rootStyle={browserCaptionStyle}\r\n           caption={caption}\r\n           onClose={onClose}\r\n        />\r\n        <div style={styles.childrenDiv}>\r\n           {children}\r\n        </div>\r\n        {this._renderCommandButton({ commandButtons, styleButton, onShowChart, onClose })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focusPrevEl(){\r\n    if (this.prevFocusedEl){\r\n      this.prevFocusedEl.focus()\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default DraggableDialog\r\n"],"file":"DraggableDialog.js"}