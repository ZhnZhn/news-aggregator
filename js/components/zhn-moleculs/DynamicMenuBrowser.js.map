{"version":3,"sources":["../../../src/components/zhn-moleculs/DynamicMenuBrowser.jsx"],"names":["Browser","Comp","BrowserCaption","ModalSlider","ScrollPane","SpinnerLoading","CL","MENU_MORE","S","BROWSER","paddingRight","SCROLL_PANE","height","overflowY","SPINNER_LOADING","position","display","width","margin","marginTop","textAlign","ROOT_MENU","paddingLeft","DynamicMenuBrowser","state","isShow","isLoading","isLoadingFailed","isMore","menuModel","_onStore","actionType","id","props","showAction","browserId","setState","_loadMenu","url","onError","fetch","then","response","status","json","err","_handleHide","_showMore","_closeMore","componentDidMount","unsubscribe","store","listen","componetWillUnmaount","_renderMenuParts","styleConfig","restProps","menu","items","map","menuPart","index","render","TS","caption","menuMore","children","_onMore","EL_BORDER","BROWSER_CAPTION","CL_SCROLL_PANE","Component","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;IAGGA,O,GAECC,gB,CAFDD,O;IAASE,c,GAERD,gB,CAFQC,c;IAAgBC,W,GAExBF,gB,CAFwBE,W;IACzBC,U,GACCH,gB,CADDG,U;IAAYC,c,GACXJ,gB,CADWI,c;AAGf,IAAMC,EAAE,GAAG;AACTC,EAAAA,SAAS,EAAE;AADF,CAAX;AAIA,IAAMC,CAAC,GAAG;AACRC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE;AADP,GADD;AAIRC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXF,IAAAA,YAAY,EAAE,EAFH;AAGXG,IAAAA,SAAS,EAAE;AAHA,GAJL;AASRC,EAAAA,eAAe,EAAE;AACfC,IAAAA,QAAQ,EAAE,UADK;AAEfC,IAAAA,OAAO,EAAE,OAFM;AAGfC,IAAAA,KAAK,EAAE,EAHQ;AAIfL,IAAAA,MAAM,EAAE,EAJO;AAKfM,IAAAA,MAAM,EAAE,QALO;AAMfC,IAAAA,SAAS,EAAE,EANI;AAOfC,IAAAA,SAAS,EAAE;AAPI,GATT;AAkBRC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE;AADJ;AAlBH,CAAV;;IAuBMC,kB;;;;;;;;;;;UAMJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,eAAe,EAAE,KAHX;AAINC,MAAAA,MAAM,EAAE,KAJF;AAKNC,MAAAA,SAAS,EAAE;AALL,K;;UAgBRC,Q,GAAW,UAACC,UAAD,EAAaC,EAAb,EAAoB;AAAA,wBACK,MAAKC,KADV;AAAA,UACrBC,UADqB,eACrBA,UADqB;AAAA,UACTC,SADS,eACTA,SADS;;AAE5B,UAAIJ,UAAU,KAAKG,UAAf,IAA6BF,EAAE,KAAKG,SAAxC,EAAmD;AACjD,cAAKC,QAAL,CAAc;AAAEX,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACH,K;;UAEDY,S,GAAY,YAAM;AAAA,yBACS,MAAKJ,KADd;AAAA,UACRK,GADQ,gBACRA,GADQ;AAAA,UACHC,OADG,gBACHA,OADG;AAEhBC,MAAAA,KAAK,CAACF,GAAD,CAAL,CACGG,IADH,CACQ,UAAAC,QAAQ,EAAI;AAAA,YACNC,MADM,GACKD,QADL,CACNC,MADM;;AAEd,YAAIA,MAAM,IAAE,GAAR,IAAeA,MAAM,GAAC,GAA1B,EAA8B;AAC5B,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACL,gBAAO;AAAED,YAAAA,MAAM,EAANA,MAAF;AAAUL,YAAAA,GAAG,EAAHA;AAAV,WAAP;AACD;AACJ,OARH,EASGG,IATH,CASQ,UAAAG,IAAI,EAAI;AACX,cAAKR,QAAL,CAAc;AACZV,UAAAA,SAAS,EAAE,KADC;AAEZG,UAAAA,SAAS,EAAEe;AAFC,SAAd;AAIF,OAdH,WAeS,UAAAC,GAAG,EAAI;AACV,cAAKT,QAAL,CAAc;AACZT,UAAAA,eAAe,EAAE,IADL;AAEZD,UAAAA,SAAS,EAAE;AAFC,SAAd;;AAIAa,QAAAA,OAAO,CAACM,GAAD,CAAP;AACH,OArBH;AAsBD,K;;UAEDC,W,GAAc,YAAM;AAClB,YAAKV,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,K;;UAEDsB,S,GAAY,YAAM;AAChB,YAAKX,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,K;;UACDoB,U,GAAa,YAAM;AACjB,YAAKZ,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,K;;;;;;;SAlDDqB,iB,GAAA,6BAAmB;AACjB,SAAKC,WAAL,GAAmB,KAAKjB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwB,KAAKtB,QAA7B,CAAnB;;AACA,SAAKO,SAAL;AACD,G;;SACDgB,oB,GAAA,gCAAsB;AACpB,SAAKH,WAAL;AACD,G;;SA8CDI,gB,GAAA,gCAAuD;AAAA,QAApCC,WAAoC,QAApCA,WAAoC;AAAA,QAAvB1B,SAAuB,QAAvBA,SAAuB;AAAA,QAAZ2B,SAAY,QAAZA,SAAY;AAAA,0BACvB3B,SADuB,CAC7C4B,IAD6C;AAAA,QAC7CA,IAD6C,gCACxC,EADwC;AAAA,2BACvB5B,SADuB,CACpC6B,KADoC;AAAA,QACpCA,KADoC,iCAC9B,EAD8B;AAErD,WAAOD,IAAI,CAACE,GAAL,CAAS,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACnC,0BACE,0BAAC,oBAAD,gCACMD,QADN;AAEE,QAAA,GAAG,EAAEC,KAFP;AAGE,QAAA,OAAO,EAAEH,KAHX;AAIE,QAAA,WAAW,EAAEH;AAJf,SAKMC,SALN,EADF;AASD,KAVM,CAAP;AAWD,G;;SAEDM,M,GAAA,kBAAQ;AAAA,uBAMF,KAAK7B,KANH;AAAA,QAEQ8B,EAFR,gBAEJR,WAFI;AAAA,QAGJS,OAHI,gBAGJA,OAHI;AAAA,QAIJC,QAJI,gBAIJA,QAJI;AAAA,QAKJC,QALI,gBAKJA,QALI;AAAA,QAKSV,SALT;AAAA,sBAWF,KAAKhC,KAXH;AAAA,QAQJC,MARI,eAQJA,MARI;AAAA,QAQIC,SARJ,eAQIA,SARJ;AAAA,QAQeC,eARf,eAQeA,eARf;AAAA,QASJC,MATI,eASJA,MATI;AAAA,QAUJC,SAVI,eAUJA,SAVI;AAAA,QAYJsC,OAZI,GAYMF,QAAQ,GAAG,KAAKlB,SAAR,GAAoB,KAAK,CAZvC;;AAaN,wBACE,sBAAC,OAAD;AAAS,MAAA,MAAM,EAAEtB,MAAjB;AAAyB,MAAA,KAAK,gCAAMjB,CAAC,CAACC,OAAR,EAAoBsD,EAAE,CAACtD,OAAvB,CAA9B;AAAA,iBAEIwD,QAAQ,iBAAI,qBAAC,WAAD;AACV,QAAA,MAAM,EAAErC,MADE;AAEV,QAAA,SAAS,EAAEtB,EAAE,CAACC,SAFJ;AAGV,QAAA,KAAK,EAAEwD,EAAE,CAACK,SAHA;AAIV,QAAA,KAAK,EAAEH,QAJG;AAKV,QAAA,OAAO,EAAE,KAAKjB;AALJ,QAFhB,eAUE,qBAAC,cAAD;AACE,QAAA,SAAS,EAAEe,EAAE,CAACM,eADhB;AAEE,QAAA,OAAO,EAAEL,OAFX;AAGE,QAAA,MAAM,EAAEG,OAHV;AAIE,QAAA,OAAO,EAAE,KAAKrB;AAJhB,QAVF,EAgBIpB,SAAS,iBAAI,qBAAC,cAAD;AAAgB,QAAA,KAAK,EAAElB,CAAC,CAACM;AAAzB,QAhBjB,EAiBIa,eAAe,iBAAI,qBAAC,cAAD;AAAgB,QAAA,KAAK,EAAEnB,CAAC,CAACM,eAAzB;AAA0C,QAAA,QAAQ,EAAE;AAApD,QAjBvB,eAkBE,sBAAC,UAAD;AACG,QAAA,SAAS,EAAEiD,EAAE,CAACO,cADjB;AAEG,QAAA,KAAK,EAAE9D,CAAC,CAACG,WAFZ;AAAA,mBAIG,KAAK2C,gBAAL,CAAsB;AAAEC,UAAAA,WAAW,EAAEQ,EAAf;AAAmBlC,UAAAA,SAAS,EAATA,SAAnB;AAA8B2B,UAAAA,SAAS,EAATA;AAA9B,SAAtB,CAJH,EAKGU,QALH;AAAA,QAlBF;AAAA,MADF;AA4BD,G;;;EA1H8BK,gB;;AAA3BhD,kB,CAEGiD,Y,GAAe;AACpBjC,EAAAA,OAAO,EAAE,mBAAI,CAAE;AADK,C;eA2HThB,kB","sourcesContent":["import { Component } from 'react'\r\n\r\nimport Comp from '../Comp'\r\nimport MenuPart from './MenuPart'\r\n\r\nconst {\r\n   Browser, BrowserCaption, ModalSlider,\r\n   ScrollPane, SpinnerLoading\r\n} = Comp;\r\n\r\nconst CL = {\r\n  MENU_MORE: \"popup-menu items__menu-more\"\r\n};\r\n\r\nconst S = {\r\n  BROWSER: {\r\n    paddingRight: 0\r\n  },\r\n  SCROLL_PANE: {\r\n    height: '92%',\r\n    paddingRight: 10,\r\n    overflowY: 'auto'\r\n  },\r\n  SPINNER_LOADING: {\r\n    position: 'relative',\r\n    display: 'block',\r\n    width: 32,\r\n    height: 32,\r\n    margin: '0 auto',\r\n    marginTop: 32,\r\n    textAlign: 'middle'\r\n  },\r\n  ROOT_MENU: {\r\n    paddingLeft: 4\r\n  }\r\n}\r\n\r\nclass DynamicMenuBrowser extends Component {\r\n\r\n  static defaultProps = {\r\n    onError: ()=>{}\r\n  }\r\n\r\n  state = {\r\n    isShow: true,\r\n    isLoading: true,\r\n    isLoadingFailed: false,\r\n    isMore: false,\r\n    menuModel: {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n    this._loadMenu()\r\n  }\r\n  componetWillUnmaount(){\r\n    this.unsubscribe()\r\n  }\r\n\r\n  _onStore = (actionType, id) => {\r\n    const { showAction, browserId } = this.props;\r\n     if (actionType === showAction && id === browserId ){\r\n       this.setState({ isShow: true })\r\n     }\r\n  }\r\n\r\n  _loadMenu = () => {\r\n    const { url, onError } = this.props;\r\n    fetch(url)\r\n      .then(response => {\r\n          const { status } = response;\r\n          if (status>=200 && status<400){\r\n            return response.json();\r\n          } else {\r\n            throw ({ status, url });\r\n          }\r\n      })\r\n      .then(json => {\r\n         this.setState({\r\n           isLoading: false,\r\n           menuModel: json\r\n         })\r\n      })\r\n      .catch(err => {\r\n          this.setState({\r\n            isLoadingFailed: true,\r\n            isLoading: false\r\n          })\r\n          onError(err)\r\n      })\r\n  }\r\n\r\n  _handleHide = () => {\r\n    this.setState({ isShow: false })\r\n  }\r\n\r\n  _showMore = () => {\r\n    this.setState({ isMore: true })\r\n  }\r\n  _closeMore = () => {\r\n    this.setState({ isMore: false })\r\n  }\r\n\r\n  _renderMenuParts({ styleConfig, menuModel, restProps }){\r\n    const { menu=[], items={} } = menuModel;\r\n    return menu.map((menuPart, index) => {\r\n      return (\r\n        <MenuPart\r\n          {...menuPart}\r\n          key={index}\r\n          hmItems={items}\r\n          styleConfig={styleConfig}\r\n          {...restProps}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      styleConfig:TS,\r\n      caption,\r\n      menuMore,\r\n      children, ...restProps\r\n    } = this.props\r\n    , {\r\n      isShow, isLoading, isLoadingFailed,\r\n      isMore,\r\n      menuModel\r\n    } = this.state\r\n    , _onMore = menuMore ? this._showMore : void 0;\r\n    return (\r\n      <Browser isShow={isShow} style={{...S.BROWSER, ...TS.BROWSER}}>\r\n        {\r\n          menuMore && <ModalSlider\r\n            isShow={isMore}\r\n            className={CL.MENU_MORE}\r\n            style={TS.EL_BORDER}\r\n            model={menuMore}\r\n            onClose={this._closeMore}\r\n          />\r\n        }\r\n        <BrowserCaption\r\n          rootStyle={TS.BROWSER_CAPTION}\r\n          caption={caption}\r\n          onMore={_onMore}\r\n          onClose={this._handleHide}\r\n        />\r\n        { isLoading && <SpinnerLoading style={S.SPINNER_LOADING} />}\r\n        { isLoadingFailed && <SpinnerLoading style={S.SPINNER_LOADING} isFailed={true} />}\r\n        <ScrollPane\r\n           className={TS.CL_SCROLL_PANE}\r\n           style={S.SCROLL_PANE}\r\n        >\r\n          {this._renderMenuParts({ styleConfig: TS, menuModel, restProps })}\r\n          {children}\r\n        </ScrollPane>\r\n      </Browser>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamicMenuBrowser\r\n"],"file":"DynamicMenuBrowser.js"}