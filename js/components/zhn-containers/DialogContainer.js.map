{"version":3,"sources":["../../../src/components/zhn-containers/DialogContainer.jsx"],"names":["S","ROOT","zIndex","position","top","left","width","isInCont","utils","_doVisible","arr","keyValue","index","max","length","i","key","slice","_updateVisible","state","maxDialog","hmIs","visibleDialogs","push","DialogContainer","elHtml","document","getElementsByTagName","compDialogs","_onStore","actionType","option","showAction","props","setState","prevState","Comp","_hCloseDialog","filter","value","style","cursor","_renderDialogs","map","isShow","onClose","bind","componentDidMount","unsubscribe","store","listen","componentWillUnmount","render","Component"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAG,IADL;AAEJC,IAAAA,QAAQ,EAAE,UAFN;AAGJC,IAAAA,GAAG,EAAE,EAHD;AAIJC,IAAAA,IAAI,EAAE,EAJF;AAKJC,IAAAA,KAAK,EAAE;AALH;AADE,CAAV;IAUQC,Q,GAAaC,iB,CAAbD,Q;;AAER,IAAME,UAAU,GAAG,SAAbA,UAAa,CAASC,GAAT,EAAcC,QAAd,EAAuB;AACxC,MAAIC,KAAJ;AAAA,MACIC,GAAG,GAAGH,GAAG,CAACI,MADd;AAAA,MAEIC,CAFJ;;AAGA,OAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACF,GAAZ,EAAiBE,CAAC,EAAlB,EAAqB;AACnB,QAAIL,GAAG,CAACK,CAAD,CAAH,CAAOC,GAAP,KAAeL,QAAnB,EAA4B;AAC1BC,MAAAA,KAAK,GAAGG,CAAR;AACA;AACD;AACF;;AACD,mBAAYL,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaL,KAAb,CAAZ,EAAoCF,GAAG,CAACO,KAAJ,CAAUL,KAAK,GAAC,CAAhB,CAApC,GAAwDF,GAAG,CAACE,KAAD,CAA3D;AACD,CAXD;;AAaA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQH,GAAR,EAAaI,SAAb,EAA2B;AAAA,MACxCC,IADwC,GAC/BF,KAD+B,CACxCE,IADwC;;AAEhD,MAAI,CAACA,IAAI,CAACL,GAAD,CAAT,EAAe;AAAA,QACPM,cADO,GACYH,KADZ,CACPG,cADO;AAEbD,IAAAA,IAAI,CAACL,GAAD,CAAJ,GAAY,IAAZ;AACAM,IAAAA,cAAc,CAACC,IAAf,CAAoBP,GAApB;;AACA,QAAIM,cAAc,CAACR,MAAf,GAAwBM,SAA5B,EAAsC;AACpCC,MAAAA,IAAI,CAACC,cAAc,CAAC,CAAD,CAAf,CAAJ,GAA0B,KAA1B;AACAA,MAAAA,cAAc,GAAGA,cAAc,CAACL,KAAf,CAAqB,CAArB,CAAjB;AACD;AACF;AACF,CAXD;;IAaMO,e;;;;;;;;;;;UAEHC,M,GAASC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,C;UACTR,K,GAAQ;AACLE,MAAAA,IAAI,EAAE,EADD;AAELO,MAAAA,WAAW,EAAG,EAFT;AAGLN,MAAAA,cAAc,EAAE;AAHX,K;;UAaRO,Q,GAAW,UAACC,UAAD,EAAaC,MAAb,EAAwB;AAAA,UACxBC,UADwB,GACT,MAAKC,KADI,CACxBD,UADwB;;AAEhC,UAAIF,UAAU,KAAKE,UAAnB,EAA8B;AAC3B,cAAKE,QAAL,CAAc,UAAAC,SAAS,EAAI;AAAA,cACjBnB,GADiB,GACHe,MADG,CACjBf,GADiB;AAAA,cACZoB,IADY,GACHL,MADG,CACZK,IADY;AAAA,cAEjBhB,SAFiB,GAEH,MAAKa,KAFF,CAEjBb,SAFiB;;AAGzBF,UAAAA,cAAc,CAACiB,SAAD,EAAYnB,GAAZ,EAAiBI,SAAjB,CAAd;;AACA,cAAI,CAACgB,IAAL,EAAU;AACPD,YAAAA,SAAS,CAACP,WAAV,GAAwBnB,UAAU,CAAC0B,SAAS,CAACP,WAAX,EAAwBZ,GAAxB,CAAlC;AACF,WAFD,MAEO,IAAI,CAACT,QAAQ,CAAC4B,SAAS,CAACP,WAAX,EAAwBQ,IAAxB,CAAb,EAA4C;AAChDD,YAAAA,SAAS,CAACP,WAAV,CAAsBL,IAAtB,CAA2Ba,IAA3B;AACF;;AACD,iBAAOD,SAAP;AACD,SAVD;AAWF;AACH,K;;UAEDE,a,GAAgB,UAACrB,GAAD,EAAS;AACvB,YAAKkB,QAAL,CAAc,UAAAC,SAAS,EAAI;AAAA,YACjBd,IADiB,GACQc,SADR,CACjBd,IADiB;AAAA,YACXC,cADW,GACQa,SADR,CACXb,cADW;AAEzBD,QAAAA,IAAI,CAACL,GAAD,CAAJ,GAAY,KAAZ;AACAmB,QAAAA,SAAS,CAACb,cAAV,GAA2BA,cAAc,CAACgB,MAAf,CAAsB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,KAAKvB,GAAd;AAAA,SAA3B,CAA3B;AACA,cAAKS,MAAL,CAAYe,KAAZ,CAAkBC,MAAlB,GAA2B,EAA3B;AACA,eAAON,SAAP;AACD,OAND;AAOD,K;;UAEFO,c,GAAiB,YAAM;AAAA,wBACS,MAAKvB,KADd;AAAA,UACbE,IADa,eACbA,IADa;AAAA,UACPO,WADO,eACPA,WADO;AAErB,aAAOA,WAAW,CAACe,GAAZ,CAAgB,UAAAP,IAAI,EAAI;AAC5B,YAAMpB,GAAG,GAAGoB,IAAI,CAACpB,GAAjB;AACA,4BAAO,yBAAaoB,IAAb,EAAmB;AACvBpB,UAAAA,GAAG,EAAEA,GADkB;AAEvB4B,UAAAA,MAAM,EAAEvB,IAAI,CAACL,GAAD,CAFW;AAGvB6B,UAAAA,OAAO,EAAE,MAAKR,aAAL,CAAmBS,IAAnB,iDAA8B9B,GAA9B;AAHc,SAAnB,CAAP;AAKF,OAPM,CAAP;AAQD,K;;;;;;;SA5CA+B,iB,GAAA,6BAAmB;AACjB,SAAKC,WAAL,GAAmB,KAAKf,KAAL,CAAWgB,KAAX,CAAiBC,MAAjB,CAAwB,KAAKrB,QAA7B,CAAnB;AACD,G;;SACDsB,oB,GAAA,gCAAsB;AACpB,SAAKH,WAAL;AACD,G;;SAyCFI,M,GAAA,kBAAQ;AACN,wBACE;AAAK,MAAA,KAAK,EAAEpD,CAAC,CAACC,IAAd;AAAA,gBACG,KAAKyC,cAAL;AADH,MADF;AAKD,G;;;EA7D2BW,gB;;eAgEf7B,e","sourcesContent":["import { cloneElement, Component } from 'react';\r\n\r\nimport utils from './utils'\r\n\r\nconst S = {\r\n  ROOT: {\r\n    zIndex : 1030,\r\n    position: 'absolute',\r\n    top: 70,\r\n    left: 10,\r\n    width: '99%'\r\n  }\r\n};\r\n\r\nconst { isInCont } = utils;\r\n\r\nconst _doVisible = function(arr, keyValue){\r\n  let index\r\n    , max = arr.length\r\n    , i;\r\n  for (i=0; i<max; i++){\r\n    if (arr[i].key === keyValue){\r\n      index = i\r\n      break;\r\n    }\r\n  }\r\n  return [ ...arr.slice(0, index), ...arr.slice(index+1), arr[index] ];\r\n}\r\n\r\nconst _updateVisible = (state, key, maxDialog) => {\r\n  const { hmIs } = state;\r\n  if (!hmIs[key]){\r\n    let { visibleDialogs } = state;\r\n    hmIs[key] = true\r\n    visibleDialogs.push(key)\r\n    if (visibleDialogs.length > maxDialog){\r\n      hmIs[visibleDialogs[0]] = false\r\n      visibleDialogs = visibleDialogs.slice(1)\r\n    }\r\n  }\r\n}\r\n\r\nclass DialogContainer extends Component {\r\n\r\n   elHtml = document.getElementsByTagName('html')[0]\r\n   state = {\r\n      hmIs: {},\r\n      compDialogs : [],\r\n      visibleDialogs: []\r\n    }\r\n\r\n   componentDidMount(){\r\n     this.unsubscribe = this.props.store.listen(this._onStore)\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe()\r\n   }\r\n\r\n   _onStore = (actionType, option) => {\r\n      const { showAction } = this.props;\r\n      if (actionType === showAction){\r\n         this.setState(prevState => {\r\n           const { key, Comp } = option\r\n               , { maxDialog } = this.props;\r\n           _updateVisible(prevState, key, maxDialog)\r\n           if (!Comp){\r\n              prevState.compDialogs = _doVisible(prevState.compDialogs, key)\r\n           } else if (!isInCont(prevState.compDialogs, Comp)) {\r\n              prevState.compDialogs.push(Comp)\r\n           }\r\n           return prevState;\r\n         })\r\n      }\r\n   }\r\n\r\n   _hCloseDialog = (key) => {\r\n     this.setState(prevState => {\r\n       const { hmIs, visibleDialogs } = prevState;\r\n       hmIs[key] = false\r\n       prevState.visibleDialogs = visibleDialogs.filter(value => value !== key)\r\n       this.elHtml.style.cursor = ''\r\n       return prevState;\r\n     })\r\n   }\r\n\r\n  _renderDialogs = () => {\r\n    const { hmIs, compDialogs } = this.state;\r\n    return compDialogs.map(Comp => {\r\n       const key = Comp.key;\r\n       return cloneElement(Comp, {\r\n          key: key,\r\n          isShow: hmIs[key],\r\n          onClose: this._hCloseDialog.bind(this, key)\r\n       });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={S.ROOT}>\r\n        {this._renderDialogs()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogContainer\r\n"],"file":"DialogContainer.js"}