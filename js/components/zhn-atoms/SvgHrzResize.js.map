{"version":3,"sources":["../../../src/components/zhn-atoms/SvgHrzResize.jsx"],"names":["CL","HAS_TOUCH","has","_isFn","fn","_isNaN","Number","isNaN","S","ROOT_DIV","display","lineHeight","BT_DIV","marginLeft","SvgHrzResize","props","_initDomNode","domNode","minWidth","maxWidth","getDomNode","initWidth","getBoundingClientRect","width","currentWidth","minDelta","maxDelta","_increaseStepValue","countStep","step","delta","_resizeLeft","style","_resizeRight","_updateDelta","w","parseInt","_hStartResize","fnResize","id","_hStopResize","setInterval","isOnResizeAfter","evt","preventDefault","clearInterval","isResizeAfter","onResizeAfter","_leftBtHandlers","onTouchStart","bind","onTouchEnd","onMouseDown","onMouseUp","_rightBtHandlers","state","render","Component","defaultProps"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport has from '../has'\r\n\r\nconst CL = \"svg-resize\";\r\n\r\nconst { HAS_TOUCH } = has;\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\nconst _isNaN = Number.isNaN || isNaN;\r\n\r\nconst S = {\r\n  ROOT_DIV : {\r\n    display : 'inline-block',\r\n    lineHeight: '24px'\r\n  },\r\n  BT_DIV : {\r\n    marginLeft : 10\r\n  }\r\n};\r\n\r\nclass SvgHrzResize extends Component {\r\n  /*\r\n  static propTypes = {\r\n    minWidth: PropTypes.number,\r\n    maxWidth: PropTypes.number,\r\n    getDomNode: PropTypes.func,\r\n    onResizeAfter: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n     getDomNode: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.id = null\r\n    this.domNode = null\r\n    this.delta = 0\r\n    this.step = 1\r\n    this.countStep = 0\r\n    this.isResizeAfter = _isFn(props.onResizeAfter)\r\n\r\n    this._leftBtHandlers = HAS_TOUCH ? {\r\n      onTouchStart: this._hStartResize.bind(this, this._resizeLeft),\r\n      onTouchEnd: this._hStopResize.bind(this, true)\r\n    } : {\r\n      onMouseDown: this._hStartResize.bind(this, this._resizeLeft),\r\n      onMouseUp: this._hStopResize.bind(this, true),\r\n    }\r\n\r\n    this._rightBtHandlers = HAS_TOUCH ? {\r\n      onTouchStart: this._hStartResize.bind(this, this._resizeRight),\r\n      onTouchEnd: this._hStopResize.bind(this, true)\r\n    } : {\r\n      onMouseDown: this._hStartResize.bind(this, this._resizeRight),\r\n      onMouseUp: this._hStopResize.bind(this, true)\r\n    }\r\n\r\n\r\n    this.state = {}\r\n  }\r\n\r\n  _initDomNode = () => {\r\n    if (!this.domNode) {\r\n      const { minWidth, maxWidth, getDomNode } = this.props;\r\n      this.domNode = getDomNode();\r\n      this.initWidth = this.domNode.getBoundingClientRect().width;\r\n      this.currentWidth = this.initWidth;\r\n      this.minDelta = minWidth - this.initWidth;\r\n      this.maxDelta = maxWidth - this.initWidth;\r\n    }\r\n  }\r\n\r\n  _increaseStepValue = () => {\r\n    this.countStep +=1;\r\n    if ( this.countStep > 30){\r\n      this.step = 3;\r\n    } else if ( this.countStep > 15){\r\n      this.step = 2;\r\n    }\r\n    if ( (this.maxDelta - this.delta) < 20 ||\r\n         (this.delta - this.minDelta) < 20    ){\r\n      this.step = 1;\r\n    }\r\n  }\r\n\r\n  _resizeLeft = () => {\r\n    if (this.delta > this.minDelta){\r\n      this.delta -= this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  }\r\n  _resizeRight = () => {\r\n    if (this.delta < this.maxDelta){\r\n      this.delta += this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  }\r\n\r\n  _updateDelta = () => {\r\n    const w = parseInt(this.domNode.style.width);\r\n    if (!_isNaN(w)) {\r\n      this.delta = w - this.initWidth\r\n    }\r\n  }\r\n  _hStartResize = (fnResize) => {\r\n    //evt.preventDefault()\r\n    this._initDomNode()\r\n    this._updateDelta()\r\n    if (this.id !== null){\r\n      this._hStopResize(false);\r\n    }\r\n    this.id = setInterval(fnResize, 5);\r\n  }\r\n  _hStopResize = (isOnResizeAfter, evt) => {\r\n    if (evt) {\r\n      evt.preventDefault()\r\n    }\r\n    clearInterval(this.id);\r\n    this._initDomNode()\r\n    this.id = null;\r\n    this.step = 1;\r\n    this.countStep = 0;\r\n\r\n    if (isOnResizeAfter && this.isResizeAfter){\r\n      this.props.onResizeAfter(this.currentWidth);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={S.ROOT_DIV}>\r\n        <div\r\n           className={CL}\r\n           style={S.BT_DIV}\r\n           title=\"Resize container horizontal left\"\r\n           {...this._leftBtHandlers}\r\n        >\r\n           <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n               preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                />\r\n               <path\r\n                   d=\"M 6,2 L 1,6 6,10\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                   fill=\"none\"\r\n               />\r\n          </svg>\r\n      </div>\r\n      <div\r\n         className={CL}\r\n         style={S.BT_DIV}\r\n         title=\"Resize container horizontal right\"\r\n         {...this._rightBtHandlers}\r\n      >\r\n        <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n             preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n            />\r\n            <path\r\n                  d=\"M 6,2 L 11,6 6,10\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  fill=\"none\"\r\n           />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default SvgHrzResize\r\n"],"file":"SvgHrzResize.js"}