{"version":3,"sources":["../../src/api/WebhoseApi.js"],"names":["C","ROOT_URL","NEWS_SLICE","BRODCAST_SLICE","DF_SITE_TYPE","DF_IN_TITLE","DF_BEFORE_DAYS","MS_DAY","MAX_BEFORE_DAYS","_crTs","beforeDays","_","parseInt","Number","isNaN","Date","now","_crNewsUrl","option","apiKey","inTitle","siteType","_beforeDays","_ts","_inTitle","undefined","_crBrodcastUrl","query","key","_rCreateUrl","NEWS","BRODCAST","WebhoseApi","getRequestUrl","requestType","fnCr","checkResponse","json","status","message","msg"],"mappings":"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","sourcesContent":["\r\nconst C = {\r\n  ROOT_URL: 'https://webhose.io/',\r\n  NEWS_SLICE: 'filterWebContent',\r\n  BRODCAST_SLICE: 'broadcastFilter'\r\n};\r\n\r\nconst DF_SITE_TYPE = 'news';\r\nconst DF_IN_TITLE = 'Weather';\r\nconst DF_BEFORE_DAYS = 2;\r\nconst MS_DAY = 24*60*60*1000;\r\nconst MAX_BEFORE_DAYS = 30;\r\n\r\nconst _crTs = (beforeDays) => {\r\n  const _ = parseInt(beforeDays, 10);\r\n  if ( !Number.isNaN(_) && _ < MAX_BEFORE_DAYS ) {\r\n    return Date.now() - _*MS_DAY;\r\n  } else {\r\n    return Date.now() - DF_BEFORE_DAYS*MS_DAY;\r\n  }\r\n}\r\n\r\nconst _crNewsUrl = (option) => {\r\n  const {\r\n         apiKey, inTitle,\r\n         siteType=DF_SITE_TYPE,\r\n         beforeDays\r\n       } = option\r\n      , _beforeDays = (beforeDays)\r\n           ? beforeDays\r\n           : DF_BEFORE_DAYS\r\n      , _ts = _crTs(_beforeDays)\r\n      , _inTitle = (inTitle)\r\n            ? inTitle\r\n            : DF_IN_TITLE;\r\n  option.apiKey = undefined\r\n  return `${C.ROOT_URL}${C.NEWS_SLICE}?token=${apiKey}&format=json&sort=crawled&ts=${_ts}&q=language:english thread.title:${_inTitle} site_type:${siteType}`;\r\n}\r\n\r\nconst _crBrodcastUrl = (option) => {\r\n  const {\r\n          apiKey, query,\r\n          beforeDays\r\n        } = option\r\n  , _beforeDays = (beforeDays)\r\n       ? beforeDays\r\n       : DF_BEFORE_DAYS\r\n  , _ts = _crTs(_beforeDays);\r\n  option.key = undefined\r\n  return `${C.ROOT_URL}${C.BRODCAST_SLICE}?token=${apiKey}&format=json&ts=${_ts}&q=${query}`;\r\n}\r\n\r\nconst _rCreateUrl = {\r\n  NEWS: _crNewsUrl,\r\n  BRODCAST: _crBrodcastUrl\r\n};\r\n\r\nconst WebhoseApi = {\r\n  getRequestUrl(option){\r\n    const { requestType } = option\r\n        , fnCr = _rCreateUrl[requestType];\r\n\r\n    return fnCr(option);\r\n    /*\r\n    const {\r\n           apiKey, inTitle,\r\n           siteType=DF_SITE_TYPE,\r\n           beforeDays\r\n         } = option\r\n        , _beforeDays = (beforeDays)\r\n             ? beforeDays\r\n             : DF_BEFORE_DAYS\r\n        , _ts = _crTs(_beforeDays)\r\n        , _inTitle = (inTitle)\r\n              ? inTitle\r\n              : DF_IN_TITLE;\r\n    option.apiKey = undefined\r\n    return `${ROOT}?token=${apiKey}&format=json&sort=crawled&ts=${_ts}&q=language:english thread.title:${_inTitle} site_type:${siteType}`\r\n    */\r\n  },\r\n\r\n  checkResponse(json, option){\r\n    const { status, message } = json;\r\n    if (status === 'error'){\r\n      throw { msg: message };\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default WebhoseApi\r\n"],"file":"WebhoseApi.js"}