{"version":3,"sources":["../../../src/flux/stores/ComponentSlice.js"],"names":["NewsDialogLogic","showNewsDialog","slice","itemConf","type","key","Comp","Factory","createDialog","NewsPaneLogic","showNewsPane","store","id","paneId","createNewsPane","toggleNewsPane","BrowserLogic","createResult","browserId","data","updateBadge","option","isOpen","toggleBadge","removeBadges","ComponentSlice","dialogInit","newsPaneInit","hmBrowser","onShowNewsDialog","event","r","trigger","TYPES","SHOW_NEWS_DIALOG","onShowModalDialog","modalDialogType","SHOW_MODAL_DIALOG","onShowNewsPane","pane","browser","SHOW_NEWS_PANE","UPDATE_BROWSER","onToggleNewsPane","TOGGLE_NEWS_PANE","onCloseNewsPane","onRemoveNewsBadges","onShowAbout","SHOW_ABOUT","onShowBrowser","SHOW_BROWSER","onUpdateBrowser","onChangeTheme","themeName","CHANGE_THEME"],"mappings":"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","sourcesContent":["import { TYPES } from '../actions/ComponentActions'\r\n\r\nimport Factory from '../logic/Factory'\r\n\r\nconst NewsDialogLogic = {\r\n  showNewsDialog(slice, itemConf){\r\n    const { type } = itemConf;\r\n    if (slice[type]){\r\n      return { key:type };\r\n    } else {\r\n      const Comp = Factory.createDialog(itemConf);\r\n      slice[type] = true\r\n      return { key:type, Comp };\r\n    }\r\n  }\r\n}\r\n\r\nconst NewsPaneLogic = {\r\n  showNewsPane(slice, itemConf, store){\r\n    const { type } = itemConf;\r\n    if (slice[type]){\r\n      return { id: itemConf.paneId };\r\n    } else {\r\n      const Comp = Factory.createNewsPane(itemConf, store)\r\n      slice[type] = true;\r\n      return { Comp };\r\n    }\r\n  },\r\n\r\n  toggleNewsPane(itemConf){\r\n    return {\r\n      id: itemConf.paneId\r\n    };\r\n  }\r\n\r\n}\r\n\r\nconst BrowserLogic = {\r\n  createResult(slice, itemConf){\r\n    const { browserId } = itemConf;\r\n    return {\r\n      id: browserId,\r\n      data: slice[browserId]\r\n    };\r\n  },\r\n\r\n  updateBadge(slice, itemConf, option={ isOpen: true }){\r\n    const { browserId, type } = itemConf;\r\n    if (!slice[browserId]){\r\n      slice[browserId] = {}\r\n    }\r\n    slice[browserId][type] = {\r\n      ...slice[browserId][type],\r\n      ...option\r\n    }\r\n    return {\r\n      id: browserId,\r\n      data: slice[browserId]\r\n    };\r\n  },\r\n\r\n  toggleBadge(slice, itemConf){\r\n     const { browserId, type } = itemConf;\r\n     slice[browserId][type].isOpen = !slice[browserId][type].isOpen\r\n     return {\r\n       id: browserId,\r\n       data: slice[browserId]\r\n     };\r\n  },\r\n\r\n  removeBadges(slice, itemConf){\r\n    const { browserId } = itemConf;\r\n    slice[browserId] = {}\r\n    return {\r\n      id: browserId,\r\n      data: slice[browserId]\r\n    };\r\n  }\r\n}\r\n\r\nconst ComponentSlice = {\r\n  dialogInit: {},\r\n  newsPaneInit: {},\r\n  hmBrowser: {},\r\n\r\n  onShowNewsDialog(itemConf, event){\r\n    const r = NewsDialogLogic.showNewsDialog(this.dialogInit, itemConf);\r\n    this.trigger(TYPES.SHOW_NEWS_DIALOG, r)\r\n  },\r\n\r\n  onShowModalDialog(type, option={}){\r\n    option.modalDialogType = type\r\n    this.trigger(TYPES.SHOW_MODAL_DIALOG, option)\r\n  },\r\n\r\n  onShowNewsPane(itemConf){\r\n    const pane = NewsPaneLogic.showNewsPane(this.newsPaneInit, itemConf, this);\r\n    const browser = BrowserLogic.updateBadge(this.hmBrowser, itemConf);\r\n    this.trigger(TYPES.SHOW_NEWS_PANE, pane)\r\n    this.trigger(TYPES.UPDATE_BROWSER, browser)\r\n  },\r\n  onToggleNewsPane(itemConf){\r\n    const browser = BrowserLogic.toggleBadge(this.hmBrowser, itemConf);\r\n    const pane = NewsPaneLogic.toggleNewsPane(itemConf);\r\n    this.trigger(TYPES.TOGGLE_NEWS_PANE, pane)\r\n    this.trigger(TYPES.UPDATE_BROWSER, browser)\r\n  },\r\n  onCloseNewsPane(itemConf){\r\n    const r = BrowserLogic.updateBadge(this.hmBrowser, itemConf, {isOpen:false});\r\n    this.trigger(TYPES.UPDATE_BROWSER, r)\r\n  },\r\n  onRemoveNewsBadges(itemConf){\r\n    const r = BrowserLogic.removeBadges(this.hmBrowser, itemConf)\r\n    this.trigger(TYPES.UPDATE_BROWSER, r)\r\n  },\r\n\r\n  onShowAbout(){\r\n    this.trigger(TYPES.SHOW_ABOUT)\r\n  },\r\n\r\n  onShowBrowser(browserId){\r\n    this.trigger(TYPES.SHOW_BROWSER, browserId)\r\n  },\r\n  onUpdateBrowser(itemConf, option){\r\n    const r = BrowserLogic.createResult(this.hmBrowser, itemConf);\r\n    this.trigger(TYPES.UPDATE_BROWSER, r)\r\n  },\r\n\r\n  onChangeTheme(themeName){\r\n    this.trigger(TYPES.CHANGE_THEME, themeName)\r\n  }\r\n}\r\n\r\nexport default ComponentSlice\r\n"],"file":"ComponentSlice.js"}