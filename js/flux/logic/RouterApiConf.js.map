{"version":3,"sources":["../../../src/flux/logic/RouterApiConf.js"],"names":["MSG_ERR_TAIL","MSG_ERR_DF","RouterApiConf","getApiConf","id","apiKey","Store","getNewsKey","api","Api","News","adapter","Adapter","msgErr","NewsSearch","NewsTop","getWebhoseKey","Webhose","StackOverflow","getIexKey","Iex","getFmpKey","Fmp","CryptoCompare","Messari"],"mappings":";;;;;;;AACA;;AAEA;;AACA;;AAEA,IAAMA,YAAY,GAAG,8CAArB;AACA,IAAMC,UAAU,GAAG,0BAAnB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,oBAACC,EAAD,EAAQ;AAClB,YAAOA,EAAP;AACE,WAAK,GAAL;AACE,eAAO;AACLC,UAAAA,MAAM,EAAEC,kBAAMC,UAAN,EADH;AAELC,UAAAA,GAAG,EAAEC,gBAAIC,IAFJ;AAGLC,UAAAA,OAAO,EAAEC,qBAAQF,IAHZ;AAILG,UAAAA,MAAM,eAAab;AAJd,SAAP;;AAMF,WAAK,IAAL;AACE,eAAO;AACLK,UAAAA,MAAM,EAAEC,kBAAMC,UAAN,EADH;AAELC,UAAAA,GAAG,EAAEC,gBAAIK,UAFJ;AAGLH,UAAAA,OAAO,EAAEC,qBAAQF,IAHZ;AAILG,UAAAA,MAAM,eAAab;AAJd,SAAP;;AAMF,WAAK,IAAL;AACE,eAAO;AACLK,UAAAA,MAAM,EAAEC,kBAAMC,UAAN,EADH;AAELC,UAAAA,GAAG,EAAEC,gBAAIM,OAFJ;AAGLJ,UAAAA,OAAO,EAAEC,qBAAQF,IAHZ;AAILG,UAAAA,MAAM,eAAab;AAJd,SAAP;;AAMF,WAAK,GAAL;AACE,eAAO;AACLK,UAAAA,MAAM,EAAEC,kBAAMU,aAAN,EADH;AAELR,UAAAA,GAAG,EAAEC,gBAAIQ,OAFJ;AAGLN,UAAAA,OAAO,EAAEC,qBAAQK,OAHZ;AAILJ,UAAAA,MAAM,sBAAoBb;AAJrB,SAAP;;AAMF,WAAK,IAAL;AACE,eAAO;AACLK,UAAAA,MAAM,EAAE,IADH;AAELG,UAAAA,GAAG,EAAEC,gBAAIS,aAFJ;AAGLP,UAAAA,OAAO,EAAEC,qBAAQM,aAHZ;AAILL,UAAAA,MAAM,4BAA0Bb;AAJ3B,SAAP;;AAMF,WAAK,KAAL;AACG,eAAO;AACLK,UAAAA,MAAM,EAAEC,kBAAMa,SAAN,EADH;AAELX,UAAAA,GAAG,EAAEC,gBAAIW,GAFJ;AAGLT,UAAAA,OAAO,EAAEC,qBAAQQ,GAHZ;AAILP,UAAAA,MAAM,qBAAmBb;AAJpB,SAAP;;AAMJ,WAAK,KAAL;AACG,eAAO;AACLK,UAAAA,MAAM,EAAEC,kBAAMe,SAAN,EADH;AAELb,UAAAA,GAAG,EAAEC,gBAAIa,GAFJ;AAGLX,UAAAA,OAAO,EAAEC,qBAAQU,GAHZ;AAILT,UAAAA,MAAM,eAAab;AAJd,SAAP;;AAMH,WAAK,KAAL;AACG,eAAO;AACLK,UAAAA,MAAM,EAAE,IADH;AAELG,UAAAA,GAAG,EAAEC,gBAAIc,aAFJ;AAGLZ,UAAAA,OAAO,EAAEC,qBAAQW,aAHZ;AAILV,UAAAA,MAAM,8BAA4Bb;AAJ7B,SAAP;;AAMF,WAAK,IAAL;AACE,eAAO;AACLK,UAAAA,MAAM,EAAE,IADH;AAELG,UAAAA,GAAG,EAAEC,gBAAIe,OAFJ;AAGLb,UAAAA,OAAO,EAAEC,qBAAQY,OAHZ;AAILX,UAAAA,MAAM,mCAAiCb;AAJlC,SAAP;;AAMF;AACE,eAAO;AACLa,UAAAA,MAAM,EAAEZ;AADH,SAAP;AAjEJ;AAqED;AAvEmB,CAAtB;eA0EeC,a","sourcesContent":["\r\nimport Store from '../stores/Store'\r\n\r\nimport Adapter from '../../adapters/Adapters'\r\nimport Api from '../../api/Api'\r\n\r\nconst MSG_ERR_TAIL = 'Key is not set. \\nPlease, set and try again.';\r\nconst MSG_ERR_DF = 'Unknow news API provider';\r\n\r\nconst RouterApiConf = {\r\n  getApiConf: (id) => {\r\n    switch(id){\r\n      case 'N':\r\n        return {\r\n          apiKey: Store.getNewsKey(),\r\n          api: Api.News,\r\n          adapter: Adapter.News,\r\n          msgErr: `NewsApi ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'NS':\r\n        return {\r\n          apiKey: Store.getNewsKey(),\r\n          api: Api.NewsSearch,\r\n          adapter: Adapter.News,\r\n          msgErr: `NewsApi ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'NT':\r\n        return {\r\n          apiKey: Store.getNewsKey(),\r\n          api: Api.NewsTop,\r\n          adapter: Adapter.News,\r\n          msgErr: `NewsApi ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'W':\r\n        return {\r\n          apiKey: Store.getWebhoseKey(),\r\n          api: Api.Webhose,\r\n          adapter: Adapter.Webhose,\r\n          msgErr: `Webhose.io API ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'SO':\r\n        return {\r\n          apiKey: true,\r\n          api: Api.StackOverflow,\r\n          adapter: Adapter.StackOverflow,\r\n          msgErr: `StackOverflowApi API ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'IEX':\r\n         return {\r\n           apiKey: Store.getIexKey(),\r\n           api: Api.Iex,\r\n           adapter: Adapter.Iex,\r\n           msgErr: `IEX Cloud API ${MSG_ERR_TAIL}`\r\n         };\r\n     case 'FMP':\r\n        return {\r\n          apiKey: Store.getFmpKey(),\r\n          api: Api.Fmp,\r\n          adapter: Adapter.Fmp,\r\n          msgErr: `FMP API ${MSG_ERR_TAIL}`\r\n        };   \r\n     case 'CCN':\r\n        return {\r\n          apiKey: true,\r\n          api: Api.CryptoCompare,\r\n          adapter: Adapter.CryptoCompare,\r\n          msgErr: `CryptoCompare News API ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'MS':\r\n        return {\r\n          apiKey: true,\r\n          api: Api.Messari,\r\n          adapter: Adapter.Messari,\r\n          msgErr: `Messari Blockchain News API ${MSG_ERR_TAIL}`\r\n        };\r\n      default:\r\n        return {\r\n          msgErr: MSG_ERR_DF\r\n        };\r\n    }\r\n  }\r\n}\r\n\r\nexport default RouterApiConf\r\n"],"file":"RouterApiConf.js"}